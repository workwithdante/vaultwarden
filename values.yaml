vaultwarden:
  domain: "https://vault.mabecenter.org"
  invitationOrgName: "MABECENTER"

  commonAnnotations:
    backup.velero.io/backup-volumes: "vaultwarden-data, vaultwarden-files"

  podAnnotations:
    backup.velero.io/backup-volumes: "vaultwarden-data, vaultwarden-files"

  ingress:
    enabled: true
    hostname: vault.mabecenter.org
    class: "traefik"
    tls: true
    additionalAnnotations:
      traefik.ingress.kubernetes.io/scheme: internet-facing
      traefik.ingress.kubernetes.io/target-type: ip
      traefik.ingress.kubernetes.io/tags: Environment=dev,Team=test
      traefik.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:eu-central-1:ACCOUNT:certificate/LONGID"

  initContainers:
    - name: kopia-sync-to-rclone
      image: docker.io/kopia/kopia:latest
      command: [sh, -c]
      args:
        - |
          set -e

          echo "[üîÑ] Descargando backup desde S3..."

          mkdir -p /restore


          kopia repository connect rclone \
          --remote-path $BUCKET/vaultwarden \
          --rclone-exe /usr/bin/rclone \
          -p static-passw0rd

          echo "[üîÑ] Sincronizando repositorio de Kopia a rclone..."

          echo "√öltimo backup: $BACKUP_FILE"

          rclone copy s3:$BUCKET/$BACKUP_FILE /restore

          echo "[üì¶] Extrayendo..."
          tar -xzf /restore/$BACKUP_FILE -C /restore

          echo "[üìÅ] Restaurando base de datos..."
          cp /restore/db.sqlite3 /data/

          echo "[üìÅ] Restaurando attachments..."
          cp -r /restore/attachments/ /files/


      volumeMounts:
      - name: vaultwarden-data
        mountPath: /data
      - name: vaultwarden-files
        mountPath: /files

      env:
        - name: BUCKET
          value: vault-backups
        - name: RCLONE_CONFIG_S3_TYPE
          value: s3
        - name: RCLONE_CONFIG_S3_PROVIDER
          value: AWS
        - name: RCLONE_CONFIG_S3_REGION
          value: us-east-2
        - name: RCLONE_CONFIG_S3_ENV_AUTH
          value: "true"
        - name: RCLONE_CONFIG_S3_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: endpoint
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: accessKey
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: secretKey

  adminToken:
    existingSecret: vaultwarden-secret
    existingSecretKey: ADMIN_TOKEN

  smtp:
    host: "mail.mabecenter.org"
    security: "force_tls"
    port: 465
    from: "no-reply@mabecenter.org"
    fromName: "Vaultwarden Mabecenter"
    existingSecret: "vaultwarden-smtp-secret"
    username:
      existingSecretKey: SMTP_USERNAME
    password:
      existingSecretKey: SMTP_PASSWORD

  storage:
    data:
      name: vaultwarden-data
      class: nfs
      size: 15Gi
      path: /data
      accessMode: ReadWriteOnce
    attachments:
      name: vaultwarden-files
      class: nfs
      size: 10Gi
      path: /files
      accessMode: ReadWriteOnce